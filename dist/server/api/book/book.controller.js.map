{"version":3,"sources":["api/book/book.controller.js"],"names":["index","userIndex","show","create","upsert","patch","destroy","search","googleBookSearch","require","books","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","find","exec","catch","userId","params","id","user","_id","owner","findById","body","findOneAndUpdate","setDefaultsOnInsert","runValidators","process","env","GOOGLE_BOOKS_API_KEY","console","error","exit","volumes","list","auth","q","data","title","items","volumeInfo","cover","imageLinks","thumbnail","requested"],"mappings":"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","file":"book.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/books              ->  index\n * POST    /api/books              ->  create\n * GET     /api/books/:id          ->  show\n * PUT     /api/books/:id          ->  upsert\n * PATCH   /api/books/:id          ->  patch\n * DELETE  /api/books/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Book from './book.model';\nconst googleBookSearch = require('googleapis').books('v1');\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function (entity) {\n    if (entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function (entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function (entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function (entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function (err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Books\nexport function index(req, res) {\n  //var userId = req.user._id;\n  return Book.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n// Gets a list of Books for a given user or logged in user\nexport function userIndex(req, res) {\n  var userId = req.params.id || req.user._id;\n  return Book.find({owner: userId}).exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Book from the DB\nexport function show(req, res) {\n  return Book.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Book in the DB\nexport function create(req, res) {\n  return Book.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given Book in the DB at the specified ID\nexport function upsert(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Book.findOneAndUpdate({_id: req.params.id}, req.body, {\n    upsert: true,\n    setDefaultsOnInsert: true,\n    runValidators: true\n  }).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Book in the DB\nexport function patch(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Book.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Book from the DB\nexport function destroy(req, res) {\n  return Book.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n\n// Search a Book from Google\nexport function search(req, res) {\n  if (!process.env.GOOGLE_BOOKS_API_KEY) {\n    console.error(\"process.env.GOOGLE_BOOKS_API_KEY is not provided\");\n    process.exit(-1);\n  }\n  googleBookSearch.volumes.list({\n    auth: process.env.GOOGLE_BOOKS_API_KEY, //dont forget to enable google books api\n    q: req.params.search\n  }, function (err, data) {\n    if (err) {\n      return handleError(res, err);\n    }\n    try {\n      Book.create({\n        title: data.items[0].volumeInfo.title,\n        owner: req.user._id,\n        cover: data.items[0].volumeInfo.imageLinks ? data.items[0].volumeInfo.imageLinks.thumbnail : '',\n        requested: false\n      }).then(respondWithResult(res, 201))\n        .catch(handleError(res, err));\n    } catch (err) {\n      handleError(res, err);\n    }\n  });\n}\n"]}